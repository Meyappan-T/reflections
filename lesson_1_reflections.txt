How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Fill in your answer here

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Finding and fixing bugs will be easier if history of a file is accesible.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Difficult to find bugs with the number of differences available.
	Difficult to maintain the storage if automated commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In Git, we can have inter related documents. In Google Docs, possiblity of having inter related documents is less.

How can you use the commands git log and git diff to view the history of files?

    git log will list the commits and git diff will give the differences between two commits

How might using version control make you more confident to make changes that
could break something?

    Version control will give us confident to implement our new ideas, which may work or not.
	If it didn't work just rollback, if it works do the commit :).

Now that you have your workspace set up, what do you want to try using Git for?

    I'm interested in developing an android application. so, for maintaining different versions, I'm learning Git.
	
Commands learned in Lesson-1:

git log  |    List the commits and show which files have changed
git log --stat  |    Show addition information about the commits
git diff id1 id2  |    Compare two commits
git clone  |    Create a local copy/clone from the repository
git config --global color.ui auto |    get colored diff output
git checkout  |    Shows a previous version of the file. This is not a checkout to edit like in SVN or TFS!